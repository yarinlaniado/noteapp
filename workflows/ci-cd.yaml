name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: pip install -r ../requirements.txt
        
      - name: Docker-compose up before tests
        run: docker-compose up -d

      - name: Run Tests
        id: test
        run: |
          python3 ../app/test.py

      - name: Generate Docker image tag
        if: steps.test.outcome == 'success'
        run: |
          ./generate-tag.sh
        id: tag

      - name: Build Docker image after tests
        if: steps.test.outcome == 'success'
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:${{ steps.tag.outputs.NEW_DOCKER_TAG }}

      - name: Push Docker image to DockerHub
        if: steps.test.outcome == 'success'
        run: |
          IMAGE_NAME="${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME}:${{ steps.tag.outputs.NEW_DOCKER_TAG }}"
          docker tag note-app:latest "$IMAGE_NAME"
          echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
          docker push "$IMAGE_NAME"

      - name: Clean up
        run: |
          docker stop note-app-container || true
          docker rm note-app-container || true
          docker rmi note-app || true

      - name: Deploy to EKS
        if: steps.test.outcome == 'success'
        run: |
          # Placeholder for deploying application to EKS

      - name: Notify on Test Failure
        if: steps.test.outcome != 'success'
        run: |
          echo "tests failed! check the workflow"


