name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2


      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9


      - name: Install dependencies
        run: pip install -r requirements.txt


      - name: Generate Docker image tag
        run: |
          ./generate-tag.sh
        id: tag
        # runs a script to generate a version tag for the Docker image and sets it as an output variable "NEW_DOCKER_TAG."

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:${{ steps.tag.outputs.NEW_DOCKER_TAG }}
        # builds a Docker image with the generated version tag.

      - name: Tests
        run: |
        # placeholder for running tests

      - name: Push Docker image to DockerHub
        run: |
          IMAGE_NAME="${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME}:${{ steps.tag.outputs.NEW_DOCKER_TAG }}"
          docker tag note-app:latest "$IMAGE_NAME"
          echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
          docker push "$IMAGE_NAME"
        # tag and pushe the Docker image to DockerHub with the specified version tag.

      - name: Clean up
        run: |
          docker stop note-app-container || true
          docker rm note-app-container || true
          docker rmi note-app || true
        # cleaning up any running containers and removing the previous Docker image.

      - name: Deploy to EKS
        run: |
        # placeholder for deploying application to EKS.

